/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "demuxL1.v:1" *)
module demuxL1(aclk, bclk, valid0, valid1, data_in0, data_in1, valid_out0, valid_out1, valid_out2, valid_out3, data_out0, data_out1, data_out2, data_out3);
  (* src = "demuxL1.v:30" *)
  wire [7:0] _000_;
  (* src = "demuxL1.v:30" *)
  wire [7:0] _001_;
  (* src = "demuxL1.v:54" *)
  wire [7:0] _002_;
  (* src = "demuxL1.v:54" *)
  wire [7:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  (* src = "demuxL1.v:2" *)
  input aclk;
  (* src = "demuxL1.v:3" *)
  input bclk;
  (* src = "demuxL1.v:18" *)
  wire [7:0] data_ant0;
  (* src = "demuxL1.v:18" *)
  wire [7:0] data_ant1;
  (* src = "demuxL1.v:6" *)
  input [7:0] data_in0;
  (* src = "demuxL1.v:7" *)
  input [7:0] data_in1;
  (* src = "demuxL1.v:12" *)
  output [7:0] data_out0;
  (* src = "demuxL1.v:13" *)
  output [7:0] data_out1;
  (* src = "demuxL1.v:14" *)
  output [7:0] data_out2;
  (* src = "demuxL1.v:15" *)
  output [7:0] data_out3;
  (* src = "demuxL1.v:4" *)
  input valid0;
  (* src = "demuxL1.v:5" *)
  input valid1;
  (* src = "demuxL1.v:19" *)
  wire valid_ant0;
  (* src = "demuxL1.v:19" *)
  wire valid_ant1;
  (* src = "demuxL1.v:8" *)
  output valid_out0;
  (* src = "demuxL1.v:9" *)
  output valid_out1;
  (* src = "demuxL1.v:10" *)
  output valid_out2;
  (* src = "demuxL1.v:11" *)
  output valid_out3;
  NOT _040_ (
    .A(data_ant0[1]),
    .Y(_023_)
  );
  NOT _041_ (
    .A(valid_ant0),
    .Y(_024_)
  );
  NOR _042_ (
    .A(_024_),
    .B(_023_),
    .Y(_000_[1])
  );
  NOT _043_ (
    .A(data_ant0[2]),
    .Y(_025_)
  );
  NOR _044_ (
    .A(_025_),
    .B(_024_),
    .Y(_000_[2])
  );
  NOT _045_ (
    .A(data_ant0[3]),
    .Y(_026_)
  );
  NOR _046_ (
    .A(_026_),
    .B(_024_),
    .Y(_000_[3])
  );
  NOT _047_ (
    .A(data_ant0[4]),
    .Y(_027_)
  );
  NOR _048_ (
    .A(_027_),
    .B(_024_),
    .Y(_000_[4])
  );
  NOT _049_ (
    .A(data_ant0[5]),
    .Y(_028_)
  );
  NOR _050_ (
    .A(_028_),
    .B(_024_),
    .Y(_000_[5])
  );
  NOT _051_ (
    .A(data_ant0[6]),
    .Y(_029_)
  );
  NOR _052_ (
    .A(_029_),
    .B(_024_),
    .Y(_000_[6])
  );
  NOT _053_ (
    .A(data_ant0[7]),
    .Y(_030_)
  );
  NOR _054_ (
    .A(_030_),
    .B(_024_),
    .Y(_000_[7])
  );
  NOT _055_ (
    .A(data_in0[0]),
    .Y(_031_)
  );
  NOT _056_ (
    .A(valid0),
    .Y(_032_)
  );
  NOR _057_ (
    .A(_032_),
    .B(_031_),
    .Y(_001_[0])
  );
  NOT _058_ (
    .A(data_in0[1]),
    .Y(_033_)
  );
  NOR _059_ (
    .A(_033_),
    .B(_032_),
    .Y(_001_[1])
  );
  NOT _060_ (
    .A(data_in0[2]),
    .Y(_034_)
  );
  NOR _061_ (
    .A(_034_),
    .B(_032_),
    .Y(_001_[2])
  );
  NOT _062_ (
    .A(data_in0[3]),
    .Y(_035_)
  );
  NOR _063_ (
    .A(_035_),
    .B(_032_),
    .Y(_001_[3])
  );
  NOT _064_ (
    .A(data_in0[4]),
    .Y(_036_)
  );
  NOR _065_ (
    .A(_036_),
    .B(_032_),
    .Y(_001_[4])
  );
  NOT _066_ (
    .A(data_in0[5]),
    .Y(_037_)
  );
  NOR _067_ (
    .A(_037_),
    .B(_032_),
    .Y(_001_[5])
  );
  NOT _068_ (
    .A(data_in0[6]),
    .Y(_038_)
  );
  NOR _069_ (
    .A(_038_),
    .B(_032_),
    .Y(_001_[6])
  );
  NOT _070_ (
    .A(data_in0[7]),
    .Y(_039_)
  );
  NOR _071_ (
    .A(_039_),
    .B(_032_),
    .Y(_001_[7])
  );
  NOT _072_ (
    .A(data_ant1[0]),
    .Y(_004_)
  );
  NOT _073_ (
    .A(valid_ant1),
    .Y(_005_)
  );
  NOR _074_ (
    .A(_005_),
    .B(_004_),
    .Y(_002_[0])
  );
  NOT _075_ (
    .A(data_ant1[1]),
    .Y(_006_)
  );
  NOR _076_ (
    .A(_006_),
    .B(_005_),
    .Y(_002_[1])
  );
  NOT _077_ (
    .A(data_ant1[2]),
    .Y(_007_)
  );
  NOR _078_ (
    .A(_007_),
    .B(_005_),
    .Y(_002_[2])
  );
  NOT _079_ (
    .A(data_ant1[3]),
    .Y(_008_)
  );
  NOR _080_ (
    .A(_008_),
    .B(_005_),
    .Y(_002_[3])
  );
  NOT _081_ (
    .A(data_ant1[4]),
    .Y(_009_)
  );
  NOR _082_ (
    .A(_009_),
    .B(_005_),
    .Y(_002_[4])
  );
  NOT _083_ (
    .A(data_ant1[5]),
    .Y(_010_)
  );
  NOR _084_ (
    .A(_010_),
    .B(_005_),
    .Y(_002_[5])
  );
  NOT _085_ (
    .A(data_ant1[6]),
    .Y(_011_)
  );
  NOR _086_ (
    .A(_011_),
    .B(_005_),
    .Y(_002_[6])
  );
  NOT _087_ (
    .A(data_ant1[7]),
    .Y(_012_)
  );
  NOR _088_ (
    .A(_012_),
    .B(_005_),
    .Y(_002_[7])
  );
  NOT _089_ (
    .A(data_in1[0]),
    .Y(_013_)
  );
  NOT _090_ (
    .A(valid1),
    .Y(_014_)
  );
  NOR _091_ (
    .A(_014_),
    .B(_013_),
    .Y(_003_[0])
  );
  NOT _092_ (
    .A(data_in1[1]),
    .Y(_015_)
  );
  NOR _093_ (
    .A(_015_),
    .B(_014_),
    .Y(_003_[1])
  );
  NOT _094_ (
    .A(data_in1[2]),
    .Y(_016_)
  );
  NOR _095_ (
    .A(_016_),
    .B(_014_),
    .Y(_003_[2])
  );
  NOT _096_ (
    .A(data_in1[3]),
    .Y(_017_)
  );
  NOR _097_ (
    .A(_017_),
    .B(_014_),
    .Y(_003_[3])
  );
  NOT _098_ (
    .A(data_in1[4]),
    .Y(_018_)
  );
  NOR _099_ (
    .A(_018_),
    .B(_014_),
    .Y(_003_[4])
  );
  NOT _100_ (
    .A(data_in1[5]),
    .Y(_019_)
  );
  NOR _101_ (
    .A(_019_),
    .B(_014_),
    .Y(_003_[5])
  );
  NOT _102_ (
    .A(data_in1[6]),
    .Y(_020_)
  );
  NOR _103_ (
    .A(_020_),
    .B(_014_),
    .Y(_003_[6])
  );
  NOT _104_ (
    .A(data_in1[7]),
    .Y(_021_)
  );
  NOR _105_ (
    .A(_021_),
    .B(_014_),
    .Y(_003_[7])
  );
  NOT _106_ (
    .A(data_ant0[0]),
    .Y(_022_)
  );
  NOR _107_ (
    .A(_022_),
    .B(_024_),
    .Y(_000_[0])
  );
  DFF _108_ (
    .C(aclk),
    .D(valid_ant1),
    .Q(valid_out2)
  );
  DFF _109_ (
    .C(aclk),
    .D(valid1),
    .Q(valid_out3)
  );
  DFF _110_ (
    .C(aclk),
    .D(_002_[0]),
    .Q(data_out2[0])
  );
  DFF _111_ (
    .C(aclk),
    .D(_002_[1]),
    .Q(data_out2[1])
  );
  DFF _112_ (
    .C(aclk),
    .D(_002_[2]),
    .Q(data_out2[2])
  );
  DFF _113_ (
    .C(aclk),
    .D(_002_[3]),
    .Q(data_out2[3])
  );
  DFF _114_ (
    .C(aclk),
    .D(_002_[4]),
    .Q(data_out2[4])
  );
  DFF _115_ (
    .C(aclk),
    .D(_002_[5]),
    .Q(data_out2[5])
  );
  DFF _116_ (
    .C(aclk),
    .D(_002_[6]),
    .Q(data_out2[6])
  );
  DFF _117_ (
    .C(aclk),
    .D(_002_[7]),
    .Q(data_out2[7])
  );
  DFF _118_ (
    .C(aclk),
    .D(_003_[0]),
    .Q(data_out3[0])
  );
  DFF _119_ (
    .C(aclk),
    .D(_003_[1]),
    .Q(data_out3[1])
  );
  DFF _120_ (
    .C(aclk),
    .D(_003_[2]),
    .Q(data_out3[2])
  );
  DFF _121_ (
    .C(aclk),
    .D(_003_[3]),
    .Q(data_out3[3])
  );
  DFF _122_ (
    .C(aclk),
    .D(_003_[4]),
    .Q(data_out3[4])
  );
  DFF _123_ (
    .C(aclk),
    .D(_003_[5]),
    .Q(data_out3[5])
  );
  DFF _124_ (
    .C(aclk),
    .D(_003_[6]),
    .Q(data_out3[6])
  );
  DFF _125_ (
    .C(aclk),
    .D(_003_[7]),
    .Q(data_out3[7])
  );
  DFF _126_ (
    .C(aclk),
    .D(valid_ant0),
    .Q(valid_out0)
  );
  DFF _127_ (
    .C(aclk),
    .D(valid0),
    .Q(valid_out1)
  );
  DFF _128_ (
    .C(aclk),
    .D(_000_[0]),
    .Q(data_out0[0])
  );
  DFF _129_ (
    .C(aclk),
    .D(_000_[1]),
    .Q(data_out0[1])
  );
  DFF _130_ (
    .C(aclk),
    .D(_000_[2]),
    .Q(data_out0[2])
  );
  DFF _131_ (
    .C(aclk),
    .D(_000_[3]),
    .Q(data_out0[3])
  );
  DFF _132_ (
    .C(aclk),
    .D(_000_[4]),
    .Q(data_out0[4])
  );
  DFF _133_ (
    .C(aclk),
    .D(_000_[5]),
    .Q(data_out0[5])
  );
  DFF _134_ (
    .C(aclk),
    .D(_000_[6]),
    .Q(data_out0[6])
  );
  DFF _135_ (
    .C(aclk),
    .D(_000_[7]),
    .Q(data_out0[7])
  );
  DFF _136_ (
    .C(aclk),
    .D(_001_[0]),
    .Q(data_out1[0])
  );
  DFF _137_ (
    .C(aclk),
    .D(_001_[1]),
    .Q(data_out1[1])
  );
  DFF _138_ (
    .C(aclk),
    .D(_001_[2]),
    .Q(data_out1[2])
  );
  DFF _139_ (
    .C(aclk),
    .D(_001_[3]),
    .Q(data_out1[3])
  );
  DFF _140_ (
    .C(aclk),
    .D(_001_[4]),
    .Q(data_out1[4])
  );
  DFF _141_ (
    .C(aclk),
    .D(_001_[5]),
    .Q(data_out1[5])
  );
  DFF _142_ (
    .C(aclk),
    .D(_001_[6]),
    .Q(data_out1[6])
  );
  DFF _143_ (
    .C(aclk),
    .D(_001_[7]),
    .Q(data_out1[7])
  );
  DFF _144_ (
    .C(bclk),
    .D(data_in0[0]),
    .Q(data_ant0[0])
  );
  DFF _145_ (
    .C(bclk),
    .D(data_in0[1]),
    .Q(data_ant0[1])
  );
  DFF _146_ (
    .C(bclk),
    .D(data_in0[2]),
    .Q(data_ant0[2])
  );
  DFF _147_ (
    .C(bclk),
    .D(data_in0[3]),
    .Q(data_ant0[3])
  );
  DFF _148_ (
    .C(bclk),
    .D(data_in0[4]),
    .Q(data_ant0[4])
  );
  DFF _149_ (
    .C(bclk),
    .D(data_in0[5]),
    .Q(data_ant0[5])
  );
  DFF _150_ (
    .C(bclk),
    .D(data_in0[6]),
    .Q(data_ant0[6])
  );
  DFF _151_ (
    .C(bclk),
    .D(data_in0[7]),
    .Q(data_ant0[7])
  );
  DFF _152_ (
    .C(bclk),
    .D(data_in1[0]),
    .Q(data_ant1[0])
  );
  DFF _153_ (
    .C(bclk),
    .D(data_in1[1]),
    .Q(data_ant1[1])
  );
  DFF _154_ (
    .C(bclk),
    .D(data_in1[2]),
    .Q(data_ant1[2])
  );
  DFF _155_ (
    .C(bclk),
    .D(data_in1[3]),
    .Q(data_ant1[3])
  );
  DFF _156_ (
    .C(bclk),
    .D(data_in1[4]),
    .Q(data_ant1[4])
  );
  DFF _157_ (
    .C(bclk),
    .D(data_in1[5]),
    .Q(data_ant1[5])
  );
  DFF _158_ (
    .C(bclk),
    .D(data_in1[6]),
    .Q(data_ant1[6])
  );
  DFF _159_ (
    .C(bclk),
    .D(data_in1[7]),
    .Q(data_ant1[7])
  );
  DFF _160_ (
    .C(bclk),
    .D(valid0),
    .Q(valid_ant0)
  );
  DFF _161_ (
    .C(bclk),
    .D(valid1),
    .Q(valid_ant1)
  );
endmodule
