/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "recirculacion.v:1" *)
module recirculacion(clk, IDL, data_in0, valid0, data_in1, valid1, data_in2, valid2, data_in3, valid3, L1_in0, L1_valid0, L1_in1, L1_valid1, L1_in2, L1_valid2, L1_in3, L1_valid3, probador_in0, probador_valid0, probador_in1, probador_valid1, probador_in2, probador_valid3);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  (* src = "recirculacion.v:2" *)
  input IDL;
  (* src = "recirculacion.v:11" *)
  output [7:0] L1_in0;
  (* src = "recirculacion.v:13" *)
  output [7:0] L1_in1;
  (* src = "recirculacion.v:15" *)
  output [7:0] L1_in2;
  (* src = "recirculacion.v:17" *)
  output [7:0] L1_in3;
  (* src = "recirculacion.v:12" *)
  output L1_valid0;
  (* src = "recirculacion.v:14" *)
  output L1_valid1;
  (* src = "recirculacion.v:16" *)
  output L1_valid2;
  (* src = "recirculacion.v:18" *)
  output L1_valid3;
  (* src = "recirculacion.v:1" *)
  input clk;
  (* src = "recirculacion.v:3" *)
  input [7:0] data_in0;
  (* src = "recirculacion.v:5" *)
  input [7:0] data_in1;
  (* src = "recirculacion.v:7" *)
  input [7:0] data_in2;
  (* src = "recirculacion.v:9" *)
  input [7:0] data_in3;
  (* src = "recirculacion.v:20" *)
  output [7:0] probador_in0;
  (* src = "recirculacion.v:22" *)
  output [7:0] probador_in1;
  (* src = "recirculacion.v:24" *)
  output [7:0] probador_in2;
  (* src = "recirculacion.v:21" *)
  output probador_valid0;
  (* src = "recirculacion.v:23" *)
  output probador_valid1;
  (* src = "recirculacion.v:25" *)
  output probador_valid3;
  (* src = "recirculacion.v:4" *)
  input valid0;
  (* src = "recirculacion.v:6" *)
  input valid1;
  (* src = "recirculacion.v:8" *)
  input valid2;
  (* src = "recirculacion.v:10" *)
  input valid3;
  NOT _063_ (
    .A(data_in1[4]),
    .Y(_000_)
  );
  NOT _064_ (
    .A(data_in1[5]),
    .Y(_001_)
  );
  NOT _065_ (
    .A(data_in1[6]),
    .Y(_002_)
  );
  NOT _066_ (
    .A(data_in1[7]),
    .Y(_003_)
  );
  NOT _067_ (
    .A(data_in2[0]),
    .Y(_004_)
  );
  NOT _068_ (
    .A(data_in2[1]),
    .Y(_005_)
  );
  NOT _069_ (
    .A(data_in2[2]),
    .Y(_006_)
  );
  NOT _070_ (
    .A(data_in2[3]),
    .Y(_007_)
  );
  NOT _071_ (
    .A(data_in2[4]),
    .Y(_008_)
  );
  NOT _072_ (
    .A(data_in2[5]),
    .Y(_009_)
  );
  NOT _073_ (
    .A(data_in2[6]),
    .Y(_010_)
  );
  NOT _074_ (
    .A(data_in2[7]),
    .Y(_011_)
  );
  NOT _075_ (
    .A(valid1),
    .Y(_012_)
  );
  NOT _076_ (
    .A(valid3),
    .Y(_013_)
  );
  NOT _077_ (
    .A(valid0),
    .Y(_014_)
  );
  NOT _078_ (
    .A(data_in0[0]),
    .Y(_015_)
  );
  NOT _079_ (
    .A(data_in0[1]),
    .Y(_016_)
  );
  NOT _080_ (
    .A(data_in0[2]),
    .Y(_017_)
  );
  NOT _081_ (
    .A(data_in0[3]),
    .Y(_018_)
  );
  NOT _082_ (
    .A(data_in0[4]),
    .Y(_019_)
  );
  NOT _083_ (
    .A(data_in0[5]),
    .Y(_020_)
  );
  NOT _084_ (
    .A(data_in0[6]),
    .Y(_021_)
  );
  NOT _085_ (
    .A(data_in0[7]),
    .Y(_022_)
  );
  NOT _086_ (
    .A(data_in1[0]),
    .Y(_023_)
  );
  NOT _087_ (
    .A(data_in1[1]),
    .Y(_024_)
  );
  NOT _088_ (
    .A(data_in1[2]),
    .Y(_025_)
  );
  NOT _089_ (
    .A(data_in1[3]),
    .Y(_026_)
  );
  NOR _090_ (
    .A(_000_),
    .B(IDL),
    .Y(probador_in1[4])
  );
  NOR _091_ (
    .A(IDL),
    .B(_001_),
    .Y(probador_in1[5])
  );
  NOR _092_ (
    .A(IDL),
    .B(_002_),
    .Y(probador_in1[6])
  );
  NOR _093_ (
    .A(IDL),
    .B(_003_),
    .Y(probador_in1[7])
  );
  NOR _094_ (
    .A(IDL),
    .B(_004_),
    .Y(probador_in2[0])
  );
  NOR _095_ (
    .A(IDL),
    .B(_005_),
    .Y(probador_in2[1])
  );
  NOR _096_ (
    .A(IDL),
    .B(_006_),
    .Y(probador_in2[2])
  );
  NOR _097_ (
    .A(IDL),
    .B(_007_),
    .Y(probador_in2[3])
  );
  NOR _098_ (
    .A(IDL),
    .B(_008_),
    .Y(probador_in2[4])
  );
  NOR _099_ (
    .A(IDL),
    .B(_009_),
    .Y(probador_in2[5])
  );
  NOR _100_ (
    .A(IDL),
    .B(_010_),
    .Y(probador_in2[6])
  );
  NOR _101_ (
    .A(IDL),
    .B(_011_),
    .Y(probador_in2[7])
  );
  NOR _102_ (
    .A(IDL),
    .B(_012_),
    .Y(probador_valid1)
  );
  NAND _103_ (
    .A(IDL),
    .B(valid3),
    .Y(_027_)
  );
  NOT _104_ (
    .A(_027_),
    .Y(L1_valid3)
  );
  NOR _105_ (
    .A(IDL),
    .B(_014_),
    .Y(probador_valid0)
  );
  NOR _106_ (
    .A(IDL),
    .B(_015_),
    .Y(probador_in0[0])
  );
  NOR _107_ (
    .A(IDL),
    .B(_016_),
    .Y(probador_in0[1])
  );
  NOR _108_ (
    .A(IDL),
    .B(_017_),
    .Y(probador_in0[2])
  );
  NOR _109_ (
    .A(IDL),
    .B(_018_),
    .Y(probador_in0[3])
  );
  NOR _110_ (
    .A(IDL),
    .B(_019_),
    .Y(probador_in0[4])
  );
  NOR _111_ (
    .A(IDL),
    .B(_020_),
    .Y(probador_in0[5])
  );
  NOR _112_ (
    .A(IDL),
    .B(_021_),
    .Y(probador_in0[6])
  );
  NOR _113_ (
    .A(IDL),
    .B(_022_),
    .Y(probador_in0[7])
  );
  NAND _114_ (
    .A(IDL),
    .B(data_in2[0]),
    .Y(_028_)
  );
  NOT _115_ (
    .A(_028_),
    .Y(L1_in2[0])
  );
  NAND _116_ (
    .A(IDL),
    .B(data_in2[1]),
    .Y(_029_)
  );
  NOT _117_ (
    .A(_029_),
    .Y(L1_in2[1])
  );
  NAND _118_ (
    .A(IDL),
    .B(data_in2[2]),
    .Y(_030_)
  );
  NOT _119_ (
    .A(_030_),
    .Y(L1_in2[2])
  );
  NAND _120_ (
    .A(IDL),
    .B(data_in2[3]),
    .Y(_031_)
  );
  NOT _121_ (
    .A(_031_),
    .Y(L1_in2[3])
  );
  NAND _122_ (
    .A(IDL),
    .B(data_in2[4]),
    .Y(_032_)
  );
  NOT _123_ (
    .A(_032_),
    .Y(L1_in2[4])
  );
  NAND _124_ (
    .A(IDL),
    .B(data_in2[5]),
    .Y(_033_)
  );
  NOT _125_ (
    .A(_033_),
    .Y(L1_in2[5])
  );
  NAND _126_ (
    .A(IDL),
    .B(data_in2[6]),
    .Y(_034_)
  );
  NOT _127_ (
    .A(_034_),
    .Y(L1_in2[6])
  );
  NAND _128_ (
    .A(IDL),
    .B(data_in2[7]),
    .Y(_035_)
  );
  NOT _129_ (
    .A(_035_),
    .Y(L1_in2[7])
  );
  NAND _130_ (
    .A(IDL),
    .B(data_in3[0]),
    .Y(_036_)
  );
  NOT _131_ (
    .A(_036_),
    .Y(L1_in3[0])
  );
  NAND _132_ (
    .A(IDL),
    .B(data_in3[1]),
    .Y(_037_)
  );
  NOT _133_ (
    .A(_037_),
    .Y(L1_in3[1])
  );
  NAND _134_ (
    .A(IDL),
    .B(data_in3[2]),
    .Y(_038_)
  );
  NOT _135_ (
    .A(_038_),
    .Y(L1_in3[2])
  );
  NAND _136_ (
    .A(IDL),
    .B(data_in3[3]),
    .Y(_039_)
  );
  NOT _137_ (
    .A(_039_),
    .Y(L1_in3[3])
  );
  NAND _138_ (
    .A(IDL),
    .B(data_in3[4]),
    .Y(_040_)
  );
  NOT _139_ (
    .A(_040_),
    .Y(L1_in3[4])
  );
  NAND _140_ (
    .A(IDL),
    .B(data_in3[5]),
    .Y(_041_)
  );
  NOT _141_ (
    .A(_041_),
    .Y(L1_in3[5])
  );
  NAND _142_ (
    .A(IDL),
    .B(data_in3[6]),
    .Y(_042_)
  );
  NOT _143_ (
    .A(_042_),
    .Y(L1_in3[6])
  );
  NAND _144_ (
    .A(IDL),
    .B(data_in3[7]),
    .Y(_043_)
  );
  NOT _145_ (
    .A(_043_),
    .Y(L1_in3[7])
  );
  NAND _146_ (
    .A(IDL),
    .B(valid2),
    .Y(_044_)
  );
  NOT _147_ (
    .A(_044_),
    .Y(L1_valid2)
  );
  NAND _148_ (
    .A(IDL),
    .B(valid0),
    .Y(_045_)
  );
  NOT _149_ (
    .A(_045_),
    .Y(L1_valid0)
  );
  NAND _150_ (
    .A(IDL),
    .B(valid1),
    .Y(_046_)
  );
  NOT _151_ (
    .A(_046_),
    .Y(L1_valid1)
  );
  NAND _152_ (
    .A(IDL),
    .B(data_in1[0]),
    .Y(_047_)
  );
  NOT _153_ (
    .A(_047_),
    .Y(L1_in1[0])
  );
  NAND _154_ (
    .A(IDL),
    .B(data_in1[1]),
    .Y(_048_)
  );
  NOT _155_ (
    .A(_048_),
    .Y(L1_in1[1])
  );
  NAND _156_ (
    .A(IDL),
    .B(data_in1[2]),
    .Y(_049_)
  );
  NOT _157_ (
    .A(_049_),
    .Y(L1_in1[2])
  );
  NAND _158_ (
    .A(IDL),
    .B(data_in1[3]),
    .Y(_050_)
  );
  NOT _159_ (
    .A(_050_),
    .Y(L1_in1[3])
  );
  NAND _160_ (
    .A(data_in1[4]),
    .B(IDL),
    .Y(_051_)
  );
  NOT _161_ (
    .A(_051_),
    .Y(L1_in1[4])
  );
  NAND _162_ (
    .A(IDL),
    .B(data_in1[5]),
    .Y(_052_)
  );
  NOT _163_ (
    .A(_052_),
    .Y(L1_in1[5])
  );
  NAND _164_ (
    .A(IDL),
    .B(data_in1[6]),
    .Y(_053_)
  );
  NOT _165_ (
    .A(_053_),
    .Y(L1_in1[6])
  );
  NAND _166_ (
    .A(IDL),
    .B(data_in1[7]),
    .Y(_054_)
  );
  NOT _167_ (
    .A(_054_),
    .Y(L1_in1[7])
  );
  NAND _168_ (
    .A(IDL),
    .B(data_in0[0]),
    .Y(_055_)
  );
  NOT _169_ (
    .A(_055_),
    .Y(L1_in0[0])
  );
  NAND _170_ (
    .A(IDL),
    .B(data_in0[1]),
    .Y(_056_)
  );
  NOT _171_ (
    .A(_056_),
    .Y(L1_in0[1])
  );
  NAND _172_ (
    .A(IDL),
    .B(data_in0[2]),
    .Y(_057_)
  );
  NOT _173_ (
    .A(_057_),
    .Y(L1_in0[2])
  );
  NAND _174_ (
    .A(IDL),
    .B(data_in0[3]),
    .Y(_058_)
  );
  NOT _175_ (
    .A(_058_),
    .Y(L1_in0[3])
  );
  NAND _176_ (
    .A(IDL),
    .B(data_in0[4]),
    .Y(_059_)
  );
  NOT _177_ (
    .A(_059_),
    .Y(L1_in0[4])
  );
  NAND _178_ (
    .A(IDL),
    .B(data_in0[5]),
    .Y(_060_)
  );
  NOT _179_ (
    .A(_060_),
    .Y(L1_in0[5])
  );
  NAND _180_ (
    .A(IDL),
    .B(data_in0[6]),
    .Y(_061_)
  );
  NOT _181_ (
    .A(_061_),
    .Y(L1_in0[6])
  );
  NAND _182_ (
    .A(IDL),
    .B(data_in0[7]),
    .Y(_062_)
  );
  NOT _183_ (
    .A(_062_),
    .Y(L1_in0[7])
  );
  NOR _184_ (
    .A(IDL),
    .B(_013_),
    .Y(probador_valid3)
  );
  NOR _185_ (
    .A(IDL),
    .B(_023_),
    .Y(probador_in1[0])
  );
  NOR _186_ (
    .A(IDL),
    .B(_024_),
    .Y(probador_in1[1])
  );
  NOR _187_ (
    .A(IDL),
    .B(_025_),
    .Y(probador_in1[2])
  );
  NOR _188_ (
    .A(IDL),
    .B(_026_),
    .Y(probador_in1[3])
  );
endmodule
