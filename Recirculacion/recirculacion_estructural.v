/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "recirculacion.v:1" *)
module recirculacion_estructural(clk, IDL, data_in0, valid0, data_in1, valid1, data_in2, valid2, data_in3, valid3, L1_in0, L1_valid0, L1_in1, L1_valid1, L1_in2, L1_valid2, L1_in3, L1_valid3, probador_in0, probador_valid0, probador_in1, probador_valid1, probador_in2, probador_valid2, probador_in3, probador_valid3);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  (* src = "recirculacion.v:2" *)
  input IDL;
  (* src = "recirculacion.v:11" *)
  output [7:0] L1_in0;
  (* src = "recirculacion.v:13" *)
  output [7:0] L1_in1;
  (* src = "recirculacion.v:15" *)
  output [7:0] L1_in2;
  (* src = "recirculacion.v:17" *)
  output [7:0] L1_in3;
  (* src = "recirculacion.v:12" *)
  output L1_valid0;
  (* src = "recirculacion.v:14" *)
  output L1_valid1;
  (* src = "recirculacion.v:16" *)
  output L1_valid2;
  (* src = "recirculacion.v:18" *)
  output L1_valid3;
  (* src = "recirculacion.v:1" *)
  input clk;
  (* src = "recirculacion.v:3" *)
  input [7:0] data_in0;
  (* src = "recirculacion.v:5" *)
  input [7:0] data_in1;
  (* src = "recirculacion.v:7" *)
  input [7:0] data_in2;
  (* src = "recirculacion.v:9" *)
  input [7:0] data_in3;
  (* src = "recirculacion.v:20" *)
  output [7:0] probador_in0;
  (* src = "recirculacion.v:22" *)
  output [7:0] probador_in1;
  (* src = "recirculacion.v:24" *)
  output [7:0] probador_in2;
  (* src = "recirculacion.v:26" *)
  output [7:0] probador_in3;
  (* src = "recirculacion.v:21" *)
  output probador_valid0;
  (* src = "recirculacion.v:23" *)
  output probador_valid1;
  (* src = "recirculacion.v:25" *)
  output probador_valid2;
  (* src = "recirculacion.v:27" *)
  output probador_valid3;
  (* src = "recirculacion.v:4" *)
  input valid0;
  (* src = "recirculacion.v:6" *)
  input valid1;
  (* src = "recirculacion.v:8" *)
  input valid2;
  (* src = "recirculacion.v:10" *)
  input valid3;
  NOT _037_ (
    .A(data_in3[4]),
    .Y(_000_)
  );
  NOR _038_ (
    .A(IDL),
    .B(_000_),
    .Y(probador_in3[4])
  );
  NOT _039_ (
    .A(data_in3[5]),
    .Y(_001_)
  );
  NOR _040_ (
    .A(_001_),
    .B(IDL),
    .Y(probador_in3[5])
  );
  NOT _041_ (
    .A(data_in3[6]),
    .Y(_002_)
  );
  NOR _042_ (
    .A(_002_),
    .B(IDL),
    .Y(probador_in3[6])
  );
  NOT _043_ (
    .A(data_in3[7]),
    .Y(_003_)
  );
  NOR _044_ (
    .A(_003_),
    .B(IDL),
    .Y(probador_in3[7])
  );
  NOT _045_ (
    .A(valid2),
    .Y(_004_)
  );
  NOR _046_ (
    .A(_004_),
    .B(IDL),
    .Y(probador_valid2)
  );
  NOT _047_ (
    .A(data_in2[0]),
    .Y(_005_)
  );
  NOR _048_ (
    .A(_005_),
    .B(IDL),
    .Y(probador_in2[0])
  );
  NOT _049_ (
    .A(data_in2[1]),
    .Y(_006_)
  );
  NOR _050_ (
    .A(_006_),
    .B(IDL),
    .Y(probador_in2[1])
  );
  NOT _051_ (
    .A(data_in2[2]),
    .Y(_007_)
  );
  NOR _052_ (
    .A(_007_),
    .B(IDL),
    .Y(probador_in2[2])
  );
  NOT _053_ (
    .A(data_in2[3]),
    .Y(_008_)
  );
  NOR _054_ (
    .A(_008_),
    .B(IDL),
    .Y(probador_in2[3])
  );
  NOT _055_ (
    .A(data_in2[4]),
    .Y(_009_)
  );
  NOR _056_ (
    .A(_009_),
    .B(IDL),
    .Y(probador_in2[4])
  );
  NOT _057_ (
    .A(data_in2[5]),
    .Y(_010_)
  );
  NOR _058_ (
    .A(_010_),
    .B(IDL),
    .Y(probador_in2[5])
  );
  NOT _059_ (
    .A(data_in2[6]),
    .Y(_011_)
  );
  NOR _060_ (
    .A(_011_),
    .B(IDL),
    .Y(probador_in2[6])
  );
  NOT _061_ (
    .A(data_in2[7]),
    .Y(_012_)
  );
  NOR _062_ (
    .A(_012_),
    .B(IDL),
    .Y(probador_in2[7])
  );
  NOT _063_ (
    .A(valid1),
    .Y(_013_)
  );
  NOR _064_ (
    .A(_013_),
    .B(IDL),
    .Y(probador_valid1)
  );
  NOT _065_ (
    .A(data_in1[0]),
    .Y(_014_)
  );
  NOR _066_ (
    .A(_014_),
    .B(IDL),
    .Y(probador_in1[0])
  );
  NOT _067_ (
    .A(data_in1[1]),
    .Y(_015_)
  );
  NOR _068_ (
    .A(_015_),
    .B(IDL),
    .Y(probador_in1[1])
  );
  NOT _069_ (
    .A(data_in1[2]),
    .Y(_016_)
  );
  NOR _070_ (
    .A(_016_),
    .B(IDL),
    .Y(probador_in1[2])
  );
  NOT _071_ (
    .A(data_in1[3]),
    .Y(_017_)
  );
  NOR _072_ (
    .A(_017_),
    .B(IDL),
    .Y(probador_in1[3])
  );
  NOT _073_ (
    .A(data_in1[4]),
    .Y(_018_)
  );
  NOR _074_ (
    .A(_018_),
    .B(IDL),
    .Y(probador_in1[4])
  );
  NOT _075_ (
    .A(data_in1[5]),
    .Y(_019_)
  );
  NOR _076_ (
    .A(_019_),
    .B(IDL),
    .Y(probador_in1[5])
  );
  NOT _077_ (
    .A(data_in1[6]),
    .Y(_020_)
  );
  NOR _078_ (
    .A(_020_),
    .B(IDL),
    .Y(probador_in1[6])
  );
  NOT _079_ (
    .A(data_in1[7]),
    .Y(_021_)
  );
  NOR _080_ (
    .A(_021_),
    .B(IDL),
    .Y(probador_in1[7])
  );
  NOT _081_ (
    .A(valid0),
    .Y(_022_)
  );
  NOR _082_ (
    .A(_022_),
    .B(IDL),
    .Y(probador_valid0)
  );
  NOT _083_ (
    .A(data_in0[0]),
    .Y(_023_)
  );
  NOR _084_ (
    .A(_023_),
    .B(IDL),
    .Y(probador_in0[0])
  );
  NOT _085_ (
    .A(data_in0[1]),
    .Y(_024_)
  );
  NOR _086_ (
    .A(_024_),
    .B(IDL),
    .Y(probador_in0[1])
  );
  NOT _087_ (
    .A(data_in0[2]),
    .Y(_025_)
  );
  NOR _088_ (
    .A(_025_),
    .B(IDL),
    .Y(probador_in0[2])
  );
  NOT _089_ (
    .A(data_in0[3]),
    .Y(_026_)
  );
  NOR _090_ (
    .A(_026_),
    .B(IDL),
    .Y(probador_in0[3])
  );
  NOT _091_ (
    .A(data_in0[4]),
    .Y(_027_)
  );
  NOR _092_ (
    .A(_027_),
    .B(IDL),
    .Y(probador_in0[4])
  );
  NOT _093_ (
    .A(data_in0[5]),
    .Y(_028_)
  );
  NOR _094_ (
    .A(_028_),
    .B(IDL),
    .Y(probador_in0[5])
  );
  NOT _095_ (
    .A(data_in0[6]),
    .Y(_029_)
  );
  NOR _096_ (
    .A(_029_),
    .B(IDL),
    .Y(probador_in0[6])
  );
  NOT _097_ (
    .A(data_in0[7]),
    .Y(_030_)
  );
  NOR _098_ (
    .A(_030_),
    .B(IDL),
    .Y(probador_in0[7])
  );
  NOT _099_ (
    .A(IDL),
    .Y(_031_)
  );
  NOT _100_ (
    .A(valid3),
    .Y(_032_)
  );
  NOR _101_ (
    .A(_032_),
    .B(_031_),
    .Y(L1_valid3)
  );
  NOT _102_ (
    .A(data_in3[0]),
    .Y(_033_)
  );
  NOR _103_ (
    .A(_033_),
    .B(_031_),
    .Y(L1_in3[0])
  );
  NOT _104_ (
    .A(data_in3[1]),
    .Y(_034_)
  );
  NOR _105_ (
    .A(_034_),
    .B(_031_),
    .Y(L1_in3[1])
  );
  NOT _106_ (
    .A(data_in3[2]),
    .Y(_035_)
  );
  NOR _107_ (
    .A(_035_),
    .B(_031_),
    .Y(L1_in3[2])
  );
  NOT _108_ (
    .A(data_in3[3]),
    .Y(_036_)
  );
  NOR _109_ (
    .A(_036_),
    .B(_031_),
    .Y(L1_in3[3])
  );
  NOR _110_ (
    .A(_031_),
    .B(_000_),
    .Y(L1_in3[4])
  );
  NOR _111_ (
    .A(_001_),
    .B(_031_),
    .Y(L1_in3[5])
  );
  NOR _112_ (
    .A(_002_),
    .B(_031_),
    .Y(L1_in3[6])
  );
  NOR _113_ (
    .A(_003_),
    .B(_031_),
    .Y(L1_in3[7])
  );
  NOR _114_ (
    .A(_004_),
    .B(_031_),
    .Y(L1_valid2)
  );
  NOR _115_ (
    .A(_005_),
    .B(_031_),
    .Y(L1_in2[0])
  );
  NOR _116_ (
    .A(_006_),
    .B(_031_),
    .Y(L1_in2[1])
  );
  NOR _117_ (
    .A(_007_),
    .B(_031_),
    .Y(L1_in2[2])
  );
  NOR _118_ (
    .A(_008_),
    .B(_031_),
    .Y(L1_in2[3])
  );
  NOR _119_ (
    .A(_009_),
    .B(_031_),
    .Y(L1_in2[4])
  );
  NOR _120_ (
    .A(_010_),
    .B(_031_),
    .Y(L1_in2[5])
  );
  NOR _121_ (
    .A(_011_),
    .B(_031_),
    .Y(L1_in2[6])
  );
  NOR _122_ (
    .A(_012_),
    .B(_031_),
    .Y(L1_in2[7])
  );
  NOR _123_ (
    .A(_013_),
    .B(_031_),
    .Y(L1_valid1)
  );
  NOR _124_ (
    .A(_014_),
    .B(_031_),
    .Y(L1_in1[0])
  );
  NOR _125_ (
    .A(_015_),
    .B(_031_),
    .Y(L1_in1[1])
  );
  NOR _126_ (
    .A(_016_),
    .B(_031_),
    .Y(L1_in1[2])
  );
  NOR _127_ (
    .A(_017_),
    .B(_031_),
    .Y(L1_in1[3])
  );
  NOR _128_ (
    .A(_018_),
    .B(_031_),
    .Y(L1_in1[4])
  );
  NOR _129_ (
    .A(_019_),
    .B(_031_),
    .Y(L1_in1[5])
  );
  NOR _130_ (
    .A(_020_),
    .B(_031_),
    .Y(L1_in1[6])
  );
  NOR _131_ (
    .A(_021_),
    .B(_031_),
    .Y(L1_in1[7])
  );
  NOR _132_ (
    .A(_022_),
    .B(_031_),
    .Y(L1_valid0)
  );
  NOR _133_ (
    .A(_023_),
    .B(_031_),
    .Y(L1_in0[0])
  );
  NOR _134_ (
    .A(_024_),
    .B(_031_),
    .Y(L1_in0[1])
  );
  NOR _135_ (
    .A(_025_),
    .B(_031_),
    .Y(L1_in0[2])
  );
  NOR _136_ (
    .A(_026_),
    .B(_031_),
    .Y(L1_in0[3])
  );
  NOR _137_ (
    .A(_027_),
    .B(_031_),
    .Y(L1_in0[4])
  );
  NOR _138_ (
    .A(_028_),
    .B(_031_),
    .Y(L1_in0[5])
  );
  NOR _139_ (
    .A(_029_),
    .B(_031_),
    .Y(L1_in0[6])
  );
  NOR _140_ (
    .A(_030_),
    .B(_031_),
    .Y(L1_in0[7])
  );
  NOR _141_ (
    .A(_032_),
    .B(IDL),
    .Y(probador_valid3)
  );
  NOR _142_ (
    .A(_033_),
    .B(IDL),
    .Y(probador_in3[0])
  );
  NOR _143_ (
    .A(_034_),
    .B(IDL),
    .Y(probador_in3[1])
  );
  NOR _144_ (
    .A(_035_),
    .B(IDL),
    .Y(probador_in3[2])
  );
  NOR _145_ (
    .A(_036_),
    .B(IDL),
    .Y(probador_in3[3])
  );
endmodule
