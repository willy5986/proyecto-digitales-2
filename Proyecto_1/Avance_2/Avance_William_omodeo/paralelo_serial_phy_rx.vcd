$date
	Wed Jun  2 02:10:45 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module BUF $end
$var wire 1 ! A $end
$var wire 1 " Y $end
$upscope $end
$scope module BancoPruebas $end
$var wire 8 # data_out [7:0] $end
$var wire 8 $ data_out_estru [7:0] $end
$var wire 8 % data_out_cond [7:0] $end
$var wire 1 & clk_4f $end
$var wire 1 ' clk_32f $end
$var wire 1 ( active $end
$scope module paralelo_cond $end
$var wire 1 & clk_4f $end
$var wire 1 ' clk_32f $end
$var wire 1 ( active $end
$var reg 8 ) data_out [7:0] $end
$upscope $end
$scope module paralelo_estru $end
$var wire 1 * _0_ $end
$var wire 8 + data_out [7:0] $end
$var wire 1 & clk_4f $end
$var wire 1 ' clk_32f $end
$var wire 1 ( active $end
$var wire 1 , _1_ $end
$scope module _2_ $end
$var wire 1 * A $end
$var wire 1 , Y $end
$upscope $end
$upscope $end
$scope module probador $end
$var wire 8 - data_out [7:0] $end
$var reg 1 ( active $end
$var reg 1 ' clk_32f $end
$var reg 1 & clk_4f $end
$var reg 8 . com [7:0] $end
$var reg 8 / idl [7:0] $end
$upscope $end
$upscope $end
$scope module DFF $end
$var wire 1 0 C $end
$var wire 1 1 D $end
$var reg 1 2 Q $end
$upscope $end
$scope module DFFSR $end
$var wire 1 3 C $end
$var wire 1 4 D $end
$var wire 1 5 R $end
$var wire 1 6 S $end
$var reg 1 7 Q $end
$upscope $end
$scope module NAND $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 : Y $end
$upscope $end
$scope module NOR $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 = Y $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x=
z<
z;
x:
z9
z8
x7
z6
z5
z4
z3
x2
z1
z0
b0 /
b0 .
bz -
1,
b10111100 +
0*
b10111100 )
0(
0'
0&
b10111100 %
b10111100 $
bz #
z"
z!
$end
#5
b10111100 .
1'
#10
0'
#15
1'
#20
0'
#25
1'
#30
0'
#35
1'
#40
0'
1&
#45
0,
b1111100 %
b1111100 )
b1111100 /
b0 .
b1111100 $
b1111100 +
1*
1(
1'
#50
0'
#55
1'
#60
0'
#65
1'
#70
0'
#75
1'
