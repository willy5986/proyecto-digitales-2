$date
	Tue Jun  1 11:21:28 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module BancoPruebas $end
$var wire 1 ! valid $end
$var wire 1 " dclk $end
$var wire 1 # data_out $end
$var wire 8 $ data_in [7:0] $end
$var wire 8 % data_between [7:0] $end
$var wire 1 & cclk $end
$scope module main $end
$var wire 1 ! valid $end
$var wire 1 " dclk $end
$var wire 1 # data_out $end
$var wire 8 ' data_in [7:0] $end
$var wire 8 ( data_between [7:0] $end
$var wire 1 & cclk $end
$scope module com_valid $end
$var wire 1 ! valid $end
$var wire 1 " dclk $end
$var wire 8 ) data_in [7:0] $end
$var wire 1 & cclk $end
$var reg 8 * data_out [7:0] $end
$upscope $end
$scope module converter_bits $end
$var wire 8 + data_in [7:0] $end
$var wire 1 " dclk $end
$var wire 1 & cclk $end
$var reg 3 , cnt [2:0] $end
$var reg 1 # data_out $end
$upscope $end
$upscope $end
$scope module probador $end
$var reg 1 & cclk $end
$var reg 8 - data_in [7:0] $end
$var reg 1 " dclk $end
$var reg 1 ! valid $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
bx ,
bx +
bx *
b0 )
bx (
b0 '
0&
bx %
b0 $
x#
0"
0!
$end
#10
1"
#20
0"
#30
1"
#40
0"
#50
1"
#60
0"
#70
1"
#80
b10111100 %
b10111100 (
b10111100 *
b10111100 +
b111 ,
0"
1&
#90
b110 ,
1#
1"
#100
0"
#110
b101 ,
0#
1"
#120
0"
#130
b100 ,
1#
1"
#140
0"
#150
b11 ,
1"
#160
0"
0&
#170
b10 ,
1"
#180
0"
#190
b1 ,
1"
#200
0"
#210
b0 ,
0#
1"
#220
0"
#230
b111 ,
1"
#240
0"
1&
#250
b110 ,
1#
1"
#260
0"
#270
b101 ,
0#
1"
#280
0"
#290
b100 ,
1#
1"
#300
0"
#310
b11 ,
1"
#320
0"
0&
#330
b10 ,
1"
#340
0"
#350
b1 ,
1"
#360
0"
#370
b0 ,
0#
1"
#380
0"
#390
b111 ,
1"
#400
1!
b11111111 $
b11111111 '
b11111111 )
b11111111 -
0"
1&
#410
b110 ,
1#
1"
#420
0"
#430
b101 ,
0#
1"
#440
0"
#450
b100 ,
1#
1"
#460
0"
#470
b11 ,
1"
#480
0"
0&
#490
b10 ,
1"
#500
0"
#510
b1 ,
1"
#520
0"
#530
b0 ,
0#
1"
#540
0"
#550
b111 ,
1"
#560
b11011101 $
b11011101 '
b11011101 )
b11011101 -
b11111111 %
b11111111 (
b11111111 *
b11111111 +
0"
1&
#570
b110 ,
1#
1"
#580
0"
#590
b101 ,
1"
#600
0"
#610
b100 ,
1"
#620
0"
#630
b11 ,
1"
#640
0"
0&
#650
b10 ,
1"
#660
0"
#670
b1 ,
1"
#680
0"
#690
b0 ,
1"
#700
0"
#710
b111 ,
1"
#720
b11101110 $
b11101110 '
b11101110 )
b11101110 -
b11011101 %
b11011101 (
b11011101 *
b11011101 +
0"
1&
#730
b110 ,
1"
#740
0"
#750
b101 ,
1"
#760
0"
#770
b100 ,
0#
1"
#780
0"
#790
b11 ,
1#
1"
#800
0"
0&
#810
b10 ,
1"
#820
0"
#830
b1 ,
1"
#840
0"
#850
b0 ,
0#
1"
#860
0"
#870
b111 ,
1#
1"
#880
b11001100 $
b11001100 '
b11001100 )
b11001100 -
b11101110 %
b11101110 (
b11101110 *
b11101110 +
0"
1&
#890
b110 ,
1"
#900
0"
#910
b101 ,
1"
#920
0"
#930
b100 ,
1"
#940
0"
#950
b11 ,
0#
1"
#960
0"
0&
#970
b10 ,
1#
1"
#980
0"
#990
b1 ,
1"
#1000
0"
#1010
b0 ,
1"
#1020
0"
#1030
b111 ,
0#
1"
#1040
0!
b0 $
b0 '
b0 )
b0 -
b11001100 %
b11001100 (
b11001100 *
b11001100 +
0"
1&
#1050
b110 ,
1#
1"
#1060
0"
#1070
b101 ,
1"
#1080
0"
#1090
b100 ,
0#
1"
#1100
0"
#1110
b11 ,
1"
#1120
0"
0&
#1130
b10 ,
1#
1"
#1140
0"
#1150
b1 ,
1"
#1160
0"
#1170
b0 ,
0#
1"
#1180
0"
#1190
b111 ,
1"
#1200
b10111100 %
b10111100 (
b10111100 *
b10111100 +
0"
1&
#1210
b110 ,
1#
1"
#1220
0"
#1230
b101 ,
0#
1"
#1240
0"
#1250
b100 ,
1#
1"
#1260
0"
#1270
b11 ,
1"
#1280
0"
0&
#1290
b10 ,
1"
#1300
0"
#1310
b1 ,
1"
#1320
0"
#1330
b0 ,
0#
1"
#1340
0"
#1350
b111 ,
1"
#1360
0"
1&
